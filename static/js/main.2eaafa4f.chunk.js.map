{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","books","newBookData","title","rating","editBookData","id","NewBookModal","editBookModal","this","_refreshBooks","setState","axios","post","then","response","push","data","put","get","delete","map","book","Button","color","size","className","onClick","editBook","bind","deleteBook","toggleNewBookModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Input","placeholder","value","onChange","e","target","ModalFooter","addBook","toggleEditBookModal","updateBook","Table","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eaafa4f.chunk.js","sourcesContent":["import React from 'react'\nimport {Modal, ModalHeader, ModalFooter , ModalBody ,Table ,Button  } from 'reactstrap';\nimport {  FormGroup , Input } from 'reactstrap';\nimport axios from 'axios';\n\nexport default class App extends React.Component {\n    state={\n      books:[],\n      newBookData:{\n        title:\"\",\n        rating:\"\"\n      },\n      editBookData:{\n        id:\"\",\n        title:\"\",\n        rating:\"\"\n      },            \n      NewBookModal:false,\n      editBookModal:false\n    }\n\n   componentDidMount(){\n      this._refreshBooks();\n    }\n\n    toggleNewBookModal(){\n      this.setState({\n        NewBookModal: ! this.state.NewBookModal\n      })\n    }\n\n    toggleEditBookModal(){\n      this.setState({\n        editBookModal: ! this.state.editBookModal\n      })\n    }\n\n    addBook(){\n      axios.post(`http://localhost:3000/books`,this.state.newBookData).then((response)=>{\n        let { books }= this.state;\n        books.push(response.data);\n        this.setState({books, NewBookModal:false, newBookData:{\n        title:\"\",\n        rating:\"\"\n      }});\n      })\n    }\n\n    updateBook(){\n      let {title,rating} = this.state.editBookData;\n      axios.put('http://localhost:3000/books/' + this.state.editBookData.id,{\n        title,rating\n      }).then((response)=>{\n        this._refreshBooks();\n        this.setState({\n          editBookModal:false, editBookData:{ id:\"\",title:\"\",rating:\"\"}\n        })\n      });\n    }\n\n    _refreshBooks(){\n      axios.get(`http://localhost:3000/books`).then((response)=>{\n        this.setState({\n          books:response.data\n        })\n      });\n    }\n\n    editBook(id,title,rating){\n      this.setState({\n        editBookData:{id,title,rating}, editBookModal:!this.state.editBookModal\n      })\n    }\n\n    deleteBook(id){\n      axios.delete('http://localhost:3000/books/'+id).then((response)=>{\n        this._refreshBooks();\n      })\n    }\n\n\n  render() {\n    let books=this.state.books.map((book)=>{\n      return(\n                <tr key={book.id}>\n                        <th>{book.id}</th>\n                        <th>{book.title}</th>\n                         <th>{book.rating}</th>\n                        <th>\n                          <Button color=\"success\" size=\"sm\" className=\"mx-2\" \n                          onClick={this.editBook.bind(this,book.id,book.title, book.rating)}>edit</Button>\n                          <Button color=\"danger\" size=\"sm\" onClick={this.deleteBook.bind(this, book.id)}>delete</Button>\n                        </th>\n                  </tr>\n        )\n    });\n    return (\n      <div className=\"App container\">\n        <h1>BOOK APP</h1> \n            <Button className=\"my-2\" color=\"primary\" onClick={this.toggleNewBookModal.bind(this)}>add book</Button>\n            <Modal isOpen={this.state.NewBookModal} toggle={this.toggleNewBookModal.bind(this)} >\n            <ModalHeader toggle={this.toggleNewBookModal.bind(this)}>Add new Book</ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <Input placeholder=\"Title\"  id=\"title\" value={this.state.newBookData.title} onChange={(e)=>{\n                  let {newBookData}=this.state;\n                  newBookData.title=e.target.value;\n                  this.setState({ newBookData })\n                }}/>\n                <Input placeholder=\"rating\"  id=\"rating\" value={this.state.newBookData.rating} onChange={(e)=>{\n                  let {newBookData}=this.state;\n                  newBookData.rating=e.target.value;\n                  this.setState({ newBookData })\n                }}/>\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.addBook.bind(this)}>Add book</Button>{' '}\n              <Button color=\"secondary\" onClick={this.toggleNewBookModal.bind(this)}>Cancel</Button>\n            </ModalFooter>\n            </Modal>\n\n             <Modal isOpen={this.state.editBookModal} toggle={this.toggleEditBookModal.bind(this)} >\n            <ModalHeader toggle={this.toggleEditBookModal.bind(this)}>Add new Book</ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                <Input placeholder=\"Title\"  id=\"title\" value={this.state.editBookData.title} onChange={(e)=>{\n                  let {editBookData}=this.state;\n                  editBookData.title=e.target.value;\n                  this.setState({ editBookData })\n                }}/>\n                <Input placeholder=\"rating\"  id=\"rating\" value={this.state.editBookData.rating} onChange={(e)=>{\n                  let {editBookData}=this.state;\n                  editBookData.rating=e.target.value;\n                  this.setState({ editBookData })\n                }}/>\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.updateBook.bind(this)}>Updatebook</Button>{' '}\n              <Button color=\"secondary\" onClick={this.toggleEditBookModal.bind(this)}>Cancel</Button>\n            </ModalFooter>\n            </Modal>\n\n\n\n\n            <Table>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Title</th>\n                    <th>Rating</th>\n                    <th>Actions</th>\n                  </tr> \n                </thead>\n                <tbody>\n                  {books}\n                </tbody>\n            </Table>    \n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n\n\n\n/*import './App.css';\nimport React,{useState} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  const[image,setImage]=useState('');\n  const[maindata,setMaindata]=useState([]);\n\n  const myfunc=async()=>{\n    const data = await axios(`http://localhost:3000/myfriends`);\n    setMaindata(data.data);\n    try{\n       console.log(data.img);\n          for(var i=0;i<data.data.length;i++){\n            console.log(data.data[i].name)\n            console.log(data.data[i].email)\n            console.log(data.data[i].education)\n            console.log(data.data[i].area)\n          }\n    }catch(error){\n      console.log(\"unable to get data\");\n    }\n  } \n\n\n  return (\n    <div className=\"App\">\n        <h1>hello react</h1> \n        <button onClick={myfunc}>fetch</button>\n        {maindata.length}\n        \n          {maindata.length>0 ? <div>  \n            maindata.map(()=> <li>{}</li>)\n            </div>:<h1>fetch data first</h1>} \n       \n    </div>\n  );\n}\n\nexport default App;\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}